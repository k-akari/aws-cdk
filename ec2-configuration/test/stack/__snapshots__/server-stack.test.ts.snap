// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ServerStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Alb": Object {
      "Properties": Object {
        "IpAddressType": "ipv4",
        "Name": "service-test-alb",
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "SecurityGroupAlb",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Fn::ImportValue": "NetworkStack:ExportsOutputRefSubnetPublic1a52A57DE6",
          },
          Object {
            "Fn::ImportValue": "NetworkStack:ExportsOutputRefSubnetPublic1c785C7D25",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AlbListener": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "ForwardConfig": Object {
              "TargetGroups": Array [
                Object {
                  "TargetGroupArn": Object {
                    "Ref": "AlbTargetGroup",
                  },
                  "Weight": 1,
                },
              ],
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "Alb",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "AlbTargetGroup": Object {
      "Properties": Object {
        "Name": "service-test-tg",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "Targets": Array [
          Object {
            "Id": Object {
              "Ref": "Ec2Instance1a",
            },
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "NetworkStack:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "Ec2Association": Object {
      "Properties": Object {
        "EIP": Object {
          "Ref": "ElasticIpEc21a",
        },
        "InstanceId": Object {
          "Ref": "Ec2Instance1a",
        },
      },
      "Type": "AWS::EC2::EIPAssociation",
    },
    "Ec2Instance1a": Object {
      "Properties": Object {
        "AvailabilityZone": "ap-northeast-1a",
        "IamInstanceProfile": Object {
          "Ref": "InstanceProfile",
        },
        "ImageId": "ami-08a8688fb7eacb171",
        "InstanceType": "t3.small",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "SecurityGroupEc2",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Fn::ImportValue": "NetworkStack:ExportsOutputRefSubnetPublic1a52A57DE6",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "service-test-ec2-1a",
          },
        ],
      },
      "Type": "AWS::EC2::Instance",
    },
    "ElasticIpEc21a": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "service-test-eip-ec2-1a",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "InstanceProfile": Object {
      "Properties": Object {
        "InstanceProfileName": "service-test-role-ec2",
        "Roles": Array [
          Object {
            "Ref": "RoleEc2",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "RoleEc2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
        ],
        "RoleName": "service-test-role-ec2",
      },
      "Type": "AWS::IAM::Role",
    },
    "SecurityGroupAlb": Object {
      "Properties": Object {
        "GroupDescription": "for ALB",
        "GroupName": "service-test-sg-alb",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "service-test-sg-alb",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "NetworkStack:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SecurityGroupEc2": Object {
      "Properties": Object {
        "GroupDescription": "for EC2",
        "GroupName": "service-test-sg-ec2",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "service-test-sg-ec2",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "NetworkStack:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SecurityGroupEgressEc21": Object {
      "Properties": Object {
        "CidrIp": "0.0.0.0/0",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SecurityGroupEc2",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SecurityGroupIngressAlb1": Object {
      "Properties": Object {
        "CidrIp": "0.0.0.0/0",
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SecurityGroupAlb",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SecurityGroupIngressAlb2": Object {
      "Properties": Object {
        "CidrIp": "0.0.0.0/0",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SecurityGroupAlb",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SecurityGroupIngressEc21": Object {
      "Properties": Object {
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "SecurityGroupEc2",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "SecurityGroupAlb",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
